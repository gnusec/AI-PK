
Total duration (API):  25m 28s
     Total duration (wall): 2h 35m 59s
     Total code changes:    1082 lines added, 610 lines removed
     Usage by model:
         claude-3-5-haiku:  32.8k input, 2.6k output, 53.8k cache read, 0 cache write ($0.0408)
                  glm-4.6:  518.8k input, 50.5k output, 23.3m cache read, 0 cache write ($9.30)

耗时
2h 35m 59s
-------
总体可用，但是刚开始，他是投机的直接用ncat替代了socket发包！！这种行为glm好像经常做！
不过搞笑的是
官方显示的19的套餐那1000万token 现在只剩下了583万

适用于glm-4.6模型的推理
5,863,795 tokens
5,863,795 tokens


----------

$timeout 15 ./portscanner -p "1-555"   -c 200 103.235.46.115 -f json
[
  {"port": 80, "open": true, "timestamp": 1759766583}
,
  {"port": 443, "open": true, "timestamp": 1759766583}

]

Total scan time: 3.07 seconds
┌─[winger@parrot]─[~/code/zig/zigscan/glm4.6-claudecode]
└──╼ $./portscanner 
Usage: portscanner [options] <target>

Options:
  -h, --help              Show this help message
  -p <ports>              Ports to scan (e.g., "80,443,8080" or "1-1000")
  -c <concurrency>        Number of concurrent connections (default: 500)
  -t <timeout>            Connection timeout in milliseconds (default: 10000)
  -f <format>             Output format: normal, json, txt (default: normal)

Examples:
  portscanner 192.168.1.1
  portscanner -p "80,443,8080" -c 1000 192.168.1.1
  portscanner -p "1-1000" -f json 192.168.1.1

